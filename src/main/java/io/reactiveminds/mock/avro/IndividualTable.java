/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.reactiveminds.mock.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.commons.compress.utils.Charsets;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class IndividualTable extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4923783607663822688L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IndividualTable\",\"namespace\":\"io.reactiveminds.mock.avro\",\"fields\":[{\"name\":\"_delete\",\"type\":\"boolean\",\"default\":false},{\"name\":\"individual_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"individual_age\",\"type\":\"int\"},{\"name\":\"source_code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"load_date_time\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"load_user\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"individual_document\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tracking_identifier\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public boolean _delete;
  @Deprecated public java.lang.String individual_id;
  @Deprecated public int individual_age;
  @Deprecated public java.lang.String source_code;
  @Deprecated public java.lang.String load_date_time;
  @Deprecated public java.lang.String load_user;
  @Deprecated public java.lang.String individual_document;
  @Deprecated public java.lang.String tracking_identifier;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public IndividualTable() {}

  /**
   * All-args constructor.
   * @param _delete The new value for _delete
   * @param individual_id The new value for individual_id
   * @param individual_age The new value for individual_age
   * @param source_code The new value for source_code
   * @param load_date_time The new value for load_date_time
   * @param load_user The new value for load_user
   * @param individual_document The new value for individual_document
   * @param tracking_identifier The new value for tracking_identifier
   */
  public IndividualTable(java.lang.Boolean _delete, java.lang.String individual_id, java.lang.Integer individual_age, java.lang.String source_code, java.lang.String load_date_time, java.lang.String load_user, java.lang.String individual_document, java.lang.String tracking_identifier) {
    this._delete = _delete;
    this.individual_id = individual_id;
    this.individual_age = individual_age;
    this.source_code = source_code;
    this.load_date_time = load_date_time;
    this.load_user = load_user;
    this.individual_document = individual_document;
    this.tracking_identifier = tracking_identifier;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return _delete;
    case 1: return individual_id;
    case 2: return individual_age;
    case 3: return source_code;
    case 4: return load_date_time;
    case 5: return load_user;
    case 6: return individual_document;
    case 7: return tracking_identifier;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /** MODLOG: Refer: https://issues.apache.org/jira/browse/AVRO-1811 */
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
	Object value = value$;
	if(value$ instanceof Utf8) {
		value = new String(((Utf8) value$).getBytes(), Charsets.UTF_8);
	}
    switch (field$) {
    case 0: _delete = (java.lang.Boolean)value; break;
    case 1: individual_id = (java.lang.String)value; break;
    case 2: individual_age = (java.lang.Integer)value; break;
    case 3: source_code = (java.lang.String)value; break;
    case 4: load_date_time = (java.lang.String)value; break;
    case 5: load_user = (java.lang.String)value; break;
    case 6: individual_document = (java.lang.String)value; break;
    case 7: tracking_identifier = (java.lang.String)value; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the '_delete' field.
   * @return The value of the '_delete' field.
   */
  public java.lang.Boolean getDelete$1() {
    return _delete;
  }

  /**
   * Sets the value of the '_delete' field.
   * @param value the value to set.
   */
  public void setDelete$1(java.lang.Boolean value) {
    this._delete = value;
  }

  /**
   * Gets the value of the 'individual_id' field.
   * @return The value of the 'individual_id' field.
   */
  public java.lang.String getIndividualId() {
    return individual_id;
  }

  /**
   * Sets the value of the 'individual_id' field.
   * @param value the value to set.
   */
  public void setIndividualId(java.lang.String value) {
    this.individual_id = value;
  }

  /**
   * Gets the value of the 'individual_age' field.
   * @return The value of the 'individual_age' field.
   */
  public java.lang.Integer getIndividualAge() {
    return individual_age;
  }

  /**
   * Sets the value of the 'individual_age' field.
   * @param value the value to set.
   */
  public void setIndividualAge(java.lang.Integer value) {
    this.individual_age = value;
  }

  /**
   * Gets the value of the 'source_code' field.
   * @return The value of the 'source_code' field.
   */
  public java.lang.String getSourceCode() {
    return source_code;
  }

  /**
   * Sets the value of the 'source_code' field.
   * @param value the value to set.
   */
  public void setSourceCode(java.lang.String value) {
    this.source_code = value;
  }

  /**
   * Gets the value of the 'load_date_time' field.
   * @return The value of the 'load_date_time' field.
   */
  public java.lang.String getLoadDateTime() {
    return load_date_time;
  }

  /**
   * Sets the value of the 'load_date_time' field.
   * @param value the value to set.
   */
  public void setLoadDateTime(java.lang.String value) {
    this.load_date_time = value;
  }

  /**
   * Gets the value of the 'load_user' field.
   * @return The value of the 'load_user' field.
   */
  public java.lang.String getLoadUser() {
    return load_user;
  }

  /**
   * Sets the value of the 'load_user' field.
   * @param value the value to set.
   */
  public void setLoadUser(java.lang.String value) {
    this.load_user = value;
  }

  /**
   * Gets the value of the 'individual_document' field.
   * @return The value of the 'individual_document' field.
   */
  public java.lang.String getIndividualDocument() {
    return individual_document;
  }

  /**
   * Sets the value of the 'individual_document' field.
   * @param value the value to set.
   */
  public void setIndividualDocument(java.lang.String value) {
    this.individual_document = value;
  }

  /**
   * Gets the value of the 'tracking_identifier' field.
   * @return The value of the 'tracking_identifier' field.
   */
  public java.lang.String getTrackingIdentifier() {
    return tracking_identifier;
  }

  /**
   * Sets the value of the 'tracking_identifier' field.
   * @param value the value to set.
   */
  public void setTrackingIdentifier(java.lang.String value) {
    this.tracking_identifier = value;
  }

  /**
   * Creates a new IndividualTable RecordBuilder.
   * @return A new IndividualTable RecordBuilder
   */
  public static io.reactiveminds.mock.avro.IndividualTable.Builder newBuilder() {
    return new io.reactiveminds.mock.avro.IndividualTable.Builder();
  }

  /**
   * Creates a new IndividualTable RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new IndividualTable RecordBuilder
   */
  public static io.reactiveminds.mock.avro.IndividualTable.Builder newBuilder(io.reactiveminds.mock.avro.IndividualTable.Builder other) {
    return new io.reactiveminds.mock.avro.IndividualTable.Builder(other);
  }

  /**
   * Creates a new IndividualTable RecordBuilder by copying an existing IndividualTable instance.
   * @param other The existing instance to copy.
   * @return A new IndividualTable RecordBuilder
   */
  public static io.reactiveminds.mock.avro.IndividualTable.Builder newBuilder(io.reactiveminds.mock.avro.IndividualTable other) {
    return new io.reactiveminds.mock.avro.IndividualTable.Builder(other);
  }

  /**
   * RecordBuilder for IndividualTable instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IndividualTable>
    implements org.apache.avro.data.RecordBuilder<IndividualTable> {

    private boolean _delete;
    private java.lang.String individual_id;
    private int individual_age;
    private java.lang.String source_code;
    private java.lang.String load_date_time;
    private java.lang.String load_user;
    private java.lang.String individual_document;
    private java.lang.String tracking_identifier;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.reactiveminds.mock.avro.IndividualTable.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other._delete)) {
        this._delete = data().deepCopy(fields()[0].schema(), other._delete);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.individual_id)) {
        this.individual_id = data().deepCopy(fields()[1].schema(), other.individual_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.individual_age)) {
        this.individual_age = data().deepCopy(fields()[2].schema(), other.individual_age);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source_code)) {
        this.source_code = data().deepCopy(fields()[3].schema(), other.source_code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.load_date_time)) {
        this.load_date_time = data().deepCopy(fields()[4].schema(), other.load_date_time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.load_user)) {
        this.load_user = data().deepCopy(fields()[5].schema(), other.load_user);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.individual_document)) {
        this.individual_document = data().deepCopy(fields()[6].schema(), other.individual_document);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.tracking_identifier)) {
        this.tracking_identifier = data().deepCopy(fields()[7].schema(), other.tracking_identifier);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing IndividualTable instance
     * @param other The existing instance to copy.
     */
    private Builder(io.reactiveminds.mock.avro.IndividualTable other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other._delete)) {
        this._delete = data().deepCopy(fields()[0].schema(), other._delete);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.individual_id)) {
        this.individual_id = data().deepCopy(fields()[1].schema(), other.individual_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.individual_age)) {
        this.individual_age = data().deepCopy(fields()[2].schema(), other.individual_age);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source_code)) {
        this.source_code = data().deepCopy(fields()[3].schema(), other.source_code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.load_date_time)) {
        this.load_date_time = data().deepCopy(fields()[4].schema(), other.load_date_time);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.load_user)) {
        this.load_user = data().deepCopy(fields()[5].schema(), other.load_user);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.individual_document)) {
        this.individual_document = data().deepCopy(fields()[6].schema(), other.individual_document);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.tracking_identifier)) {
        this.tracking_identifier = data().deepCopy(fields()[7].schema(), other.tracking_identifier);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the '_delete' field.
      * @return The value.
      */
    public java.lang.Boolean getDelete$1() {
      return _delete;
    }

    /**
      * Sets the value of the '_delete' field.
      * @param value The value of '_delete'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setDelete$1(boolean value) {
      validate(fields()[0], value);
      this._delete = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the '_delete' field has been set.
      * @return True if the '_delete' field has been set, false otherwise.
      */
    public boolean hasDelete$1() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the '_delete' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearDelete$1() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'individual_id' field.
      * @return The value.
      */
    public java.lang.String getIndividualId() {
      return individual_id;
    }

    /**
      * Sets the value of the 'individual_id' field.
      * @param value The value of 'individual_id'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setIndividualId(java.lang.String value) {
      validate(fields()[1], value);
      this.individual_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'individual_id' field has been set.
      * @return True if the 'individual_id' field has been set, false otherwise.
      */
    public boolean hasIndividualId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'individual_id' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearIndividualId() {
      individual_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'individual_age' field.
      * @return The value.
      */
    public java.lang.Integer getIndividualAge() {
      return individual_age;
    }

    /**
      * Sets the value of the 'individual_age' field.
      * @param value The value of 'individual_age'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setIndividualAge(int value) {
      validate(fields()[2], value);
      this.individual_age = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'individual_age' field has been set.
      * @return True if the 'individual_age' field has been set, false otherwise.
      */
    public boolean hasIndividualAge() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'individual_age' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearIndividualAge() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_code' field.
      * @return The value.
      */
    public java.lang.String getSourceCode() {
      return source_code;
    }

    /**
      * Sets the value of the 'source_code' field.
      * @param value The value of 'source_code'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setSourceCode(java.lang.String value) {
      validate(fields()[3], value);
      this.source_code = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'source_code' field has been set.
      * @return True if the 'source_code' field has been set, false otherwise.
      */
    public boolean hasSourceCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'source_code' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearSourceCode() {
      source_code = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'load_date_time' field.
      * @return The value.
      */
    public java.lang.String getLoadDateTime() {
      return load_date_time;
    }

    /**
      * Sets the value of the 'load_date_time' field.
      * @param value The value of 'load_date_time'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setLoadDateTime(java.lang.String value) {
      validate(fields()[4], value);
      this.load_date_time = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'load_date_time' field has been set.
      * @return True if the 'load_date_time' field has been set, false otherwise.
      */
    public boolean hasLoadDateTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'load_date_time' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearLoadDateTime() {
      load_date_time = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'load_user' field.
      * @return The value.
      */
    public java.lang.String getLoadUser() {
      return load_user;
    }

    /**
      * Sets the value of the 'load_user' field.
      * @param value The value of 'load_user'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setLoadUser(java.lang.String value) {
      validate(fields()[5], value);
      this.load_user = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'load_user' field has been set.
      * @return True if the 'load_user' field has been set, false otherwise.
      */
    public boolean hasLoadUser() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'load_user' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearLoadUser() {
      load_user = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'individual_document' field.
      * @return The value.
      */
    public java.lang.String getIndividualDocument() {
      return individual_document;
    }

    /**
      * Sets the value of the 'individual_document' field.
      * @param value The value of 'individual_document'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setIndividualDocument(java.lang.String value) {
      validate(fields()[6], value);
      this.individual_document = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'individual_document' field has been set.
      * @return True if the 'individual_document' field has been set, false otherwise.
      */
    public boolean hasIndividualDocument() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'individual_document' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearIndividualDocument() {
      individual_document = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'tracking_identifier' field.
      * @return The value.
      */
    public java.lang.String getTrackingIdentifier() {
      return tracking_identifier;
    }

    /**
      * Sets the value of the 'tracking_identifier' field.
      * @param value The value of 'tracking_identifier'.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder setTrackingIdentifier(java.lang.String value) {
      validate(fields()[7], value);
      this.tracking_identifier = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'tracking_identifier' field has been set.
      * @return True if the 'tracking_identifier' field has been set, false otherwise.
      */
    public boolean hasTrackingIdentifier() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'tracking_identifier' field.
      * @return This builder.
      */
    public io.reactiveminds.mock.avro.IndividualTable.Builder clearTrackingIdentifier() {
      tracking_identifier = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public IndividualTable build() {
      try {
        IndividualTable record = new IndividualTable();
        record._delete = fieldSetFlags()[0] ? this._delete : (java.lang.Boolean) defaultValue(fields()[0]);
        record.individual_id = fieldSetFlags()[1] ? this.individual_id : (java.lang.String) defaultValue(fields()[1]);
        record.individual_age = fieldSetFlags()[2] ? this.individual_age : (java.lang.Integer) defaultValue(fields()[2]);
        record.source_code = fieldSetFlags()[3] ? this.source_code : (java.lang.String) defaultValue(fields()[3]);
        record.load_date_time = fieldSetFlags()[4] ? this.load_date_time : (java.lang.String) defaultValue(fields()[4]);
        record.load_user = fieldSetFlags()[5] ? this.load_user : (java.lang.String) defaultValue(fields()[5]);
        record.individual_document = fieldSetFlags()[6] ? this.individual_document : (java.lang.String) defaultValue(fields()[6]);
        record.tracking_identifier = fieldSetFlags()[7] ? this.tracking_identifier : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
